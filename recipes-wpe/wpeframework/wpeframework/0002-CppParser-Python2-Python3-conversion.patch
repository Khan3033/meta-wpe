diff --git a/Tools/ProxyStubGenerator/CppParser.py b/Tools/ProxyStubGenerator/CppParser.py
index d138322..a390bd2 100755
--- a/Tools/ProxyStubGenerator/CppParser.py
+++ b/Tools/ProxyStubGenerator/CppParser.py
@@ -388,7 +388,7 @@
     def __repr__(self):
         return str(self)

-class Parameter(Type, Variable):
+class Parameter(Variable):
     def __init__(self, parent_block, string, value = [], valid_specifiers = []):
         Variable.__init__(self, parent_block, string, value, valid_specifiers)
     def __str__(self):
@@ -426,7 +426,7 @@ class Enumerator(Type, Identifier):
         Identifier.__init__(self, parent_enum, self.name)
         self.parent = parent_block
         self.value = parent_block.GetValue() if value == None else Evaluate(value)
-        if isinstance(self.value, (int, long)):
+        if isinstance(self.value, int):
             self.parent.SetValue(self.value)
         self.parent.items.append(self)
     def __str__(self):
@@ -863,22 +863,22 @@ def DumpTree(tree, ind = 0):
     indent = ind*" "
 
     if isinstance(tree, (Namespace, Class)):
-        print indent + str(tree)
+        print (indent + str(tree))
 
         for td in tree.typedefs:
-            print indent + 2*" " + str(td)
+            print (indent + 2*" " + str(td))
 
         for e in tree.enums:
-            print indent + 2*" " + str(e)
+            print (indent + 2*" " + str(e))
             for item in e.items:
-                print indent + 4*" " + str(item)
+                print (indent + 4*" " + str(item))
 
     for v in tree.vars:
-        print indent + 2*" " + str(v)
+        print (indent + 2*" " + str(v))
 
     if isinstance(tree, (Namespace, Class)):
         for m in tree.methods:
-           print indent + 2*" " + str(m)
+           print (indent + 2*" " + str(m))
 
     if isinstance(tree, (Namespace, Class)):
         for c in tree.classes:
@@ -896,4 +896,4 @@ if __name__ == "__main__":
     if isinstance(tree, Namespace):
          DumpTree(tree)
     else:
-        print tree
+        print (tree)
